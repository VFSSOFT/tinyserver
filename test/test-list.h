
#ifndef TINYSERVER_TEST_LIST_H
#define TINYSERVER_TEST_LIST_H


#include "tinyunit.h"


TEST_DECLARE(invalid_local_host)
TEST_DECLARE(invalid_local_host_2)
TEST_DECLARE(invalid_ssl_cert)

TEST_DECLARE(tcp_connect)
TEST_DECLARE(tls_connect)
TEST_DECLARE(ws_connect)
TEST_DECLARE(wss_connect)
TEST_DECLARE(tcp_server_disconnect)
TEST_DECLARE(tls_server_disconnect)
TEST_DECLARE(ws_server_disconnect)
TEST_DECLARE(wss_server_disconnect)

TEST_DECLARE(tcp_connect_disconnect_quick)
TEST_DECLARE(tls_connect_disconnect_quick)
TEST_DECLARE(ws_connect_disconnect_quick)
TEST_DECLARE(wss_connect_disconnect_quick)
TEST_DECLARE(tcp_connect_disconnect_1s)
TEST_DECLARE(tls_connect_disconnect_1s)
TEST_DECLARE(ws_connect_disconnect_1s)
TEST_DECLARE(wss_connect_disconnect_1s)

TEST_DECLARE(tcp_10clients_connect)
TEST_DECLARE(tls_10clients_connect)
TEST_DECLARE(ws_10clients_connect)
TEST_DECLARE(wss_10clients_connect)
TEST_DECLARE(tcp_100clients_connect)
TEST_DECLARE(tls_100clients_connect)
TEST_DECLARE(ws_100clients_connect)
TEST_DECLARE(wss_100clients_connect)

TEST_DECLARE(tcp_echo)
TEST_DECLARE(tls_echo)
TEST_DECLARE(ws_echo)
TEST_DECLARE(wss_echo)
TEST_DECLARE(tcp_echo_1k)
TEST_DECLARE(tls_echo_1k)
TEST_DECLARE(ws_echo_1k)
TEST_DECLARE(wss_echo_1k)
TEST_DECLARE(tcp_echo2)
TEST_DECLARE(tls_echo2)
TEST_DECLARE(ws_echo2)
TEST_DECLARE(wss_echo2)
TEST_DECLARE(tcp_echo_1k_data)
TEST_DECLARE(tls_echo_1k_data)
TEST_DECLARE(ws_echo_1k_data)
TEST_DECLARE(wss_echo_1k_data)
TEST_DECLARE(tcp_echo_10m_data)
TEST_DECLARE(tls_echo_10m_data)
TEST_DECLARE(ws_echo_10m_data)
TEST_DECLARE(wss_echo_10m_data)

TEST_DECLARE(tls_invalid_handshake_record_test)
TEST_DECLARE(tls_invalid_handshake_record_1kzero_test)

TEST_DECLARE(mqtt_connect_tcp)
TEST_DECLARE(mqtt_connect_tls)
TEST_DECLARE(mqtt_connect_ws)
TEST_DECLARE(mqtt_connect_wss)

TEST_DECLARE(mqtt_auth_user)
TEST_DECLARE(mqtt_auth_user_fail)

TEST_DECLARE(mqtt_invalid_protocol_tcp_tls_test)
TEST_DECLARE(mqtt_invalid_protocol_tcp_ws_test)
TEST_DECLARE(mqtt_invalid_protocol_tcp_wss_test)
TEST_DECLARE(mqtt_invalid_protocol_tls_tcp_test)
TEST_DECLARE(mqtt_invalid_protocol_tls_ws_test)
TEST_DECLARE(mqtt_invalid_protocol_tls_wss_test)
TEST_DECLARE(mqtt_invalid_protocol_ws_tcp_test)
TEST_DECLARE(mqtt_invalid_protocol_ws_tls_test)
TEST_DECLARE(mqtt_invalid_protocol_ws_wss_test)
TEST_DECLARE(mqtt_invalid_protocol_wss_tcp_test)
TEST_DECLARE(mqtt_invalid_protocol_wss_tls_test)
TEST_DECLARE(mqtt_invalid_protocol_wss_ws_test)

TEST_DECLARE(mqtt_connect_invalid_reserved_flag_test)
TEST_DECLARE(mqtt_invalid_first_pkt_test)
TEST_DECLARE(mqtt_two_connect_pkts)
TEST_DECLARE(mqtt_invalid_protocol_name_test)
TEST_DECLARE(mqtt_valid_protocol_level_test)
TEST_DECLARE(mqtt_zero_clientid_but_not_clean_session_test)
TEST_DECLARE(mqtt_invalid_will_flag_test)
TEST_DECLARE(mqtt_invalid_will_qos_test)
TEST_DECLARE(mqtt_invalid_user_name_flag_test)
TEST_DECLARE(mqtt_invalid_user_password_flag_test)

TEST_DECLARE(mqtt_conn_ack_sp_false_test)
TEST_DECLARE(mqtt_conn_ack_sp_true_test)
TEST_DECLARE(mqtt_zero_length_client_id_test)
TEST_DECLARE(mqtt_normal_client_id_test)
TEST_DECLARE(mqtt_512_length_client_id_test)
TEST_DECLARE(mqtt_too_long_client_id_test)

TEST_DECLARE(mqtt_keep_alive_test)
TEST_DECLARE(mqtt_keep_alive_zero_test)
TEST_DECLARE(mqtt_keep_alive_timed_out_test)
TEST_DECLARE(mqtt_no_pkt_after_connected_test)

TEST_DECLARE(mqtt_valid_topic_name_test)
TEST_DECLARE(mqtt_valid_topic_filter_test)
TEST_DECLARE(mqtt_invalid_topic_name_test)
TEST_DECLARE(mqtt_invalid_topic_filter_test)
TEST_DECLARE(mqtt_sub_matched_test)
TEST_DECLARE(mqtt_sub_unmatched_test)
TEST_DECLARE(mqtt_sub_matched_multiple_test)
TEST_DECLARE(mqtt_sub_matched_multiple_test2)

TEST_LIST_START
        TEST_ENTRY(invalid_local_host, "Error")
        TEST_ENTRY(invalid_local_host_2, "Error")
        TEST_ENTRY(invalid_ssl_cert, "Error")
        
        TEST_ENTRY(tcp_connect, "TCP")
        TEST_ENTRY(tls_connect, "TLS")
        TEST_ENTRY(ws_connect, "Websocket")
        TEST_ENTRY(wss_connect, "Websocket,TLS")
        TEST_ENTRY(tcp_server_disconnect, "TCP")
        TEST_ENTRY(tls_server_disconnect, "TLS")
        TEST_ENTRY(ws_server_disconnect, "Websocket")
        TEST_ENTRY(wss_server_disconnect, "Websocket,TLS")
        TEST_ENTRY(tcp_connect_disconnect_quick, "TCP")
        TEST_ENTRY(tls_connect_disconnect_quick, "TLS")
        TEST_ENTRY(ws_connect_disconnect_quick, "Websocket")
        TEST_ENTRY(wss_connect_disconnect_quick, "Websocket,TLS")
        
        TEST_ENTRY(tcp_connect_disconnect_1s, "TCP")
        TEST_ENTRY(tls_connect_disconnect_1s, "TLS")
        TEST_ENTRY(ws_connect_disconnect_1s, "Websocket")
        TEST_ENTRY(wss_connect_disconnect_1s, "Websocket,TLS")
        
        TEST_ENTRY(tcp_10clients_connect, "TCP")
        TEST_ENTRY(tls_10clients_connect, "TLS")
        TEST_ENTRY(ws_10clients_connect, "Websocket")
        TEST_ENTRY(wss_10clients_connect, "TLS,Websocket")
        TEST_ENTRY(tcp_100clients_connect, "TCP")
        TEST_ENTRY(tls_100clients_connect, "TLS")
        TEST_ENTRY(ws_100clients_connect, "Websocket")
        TEST_ENTRY(wss_100clients_connect, "TLS,Websocket")
        

        TEST_ENTRY(tcp_echo, "TCP")
        TEST_ENTRY(tls_echo, "TLS")
        TEST_ENTRY(ws_echo, "Websocket")
        TEST_ENTRY(wss_echo, "TLS,Websocket")
        TEST_ENTRY(tcp_echo_1k, "TCP")
        TEST_ENTRY(tls_echo_1k, "TLS")
        TEST_ENTRY(ws_echo_1k, "Websocket")
        TEST_ENTRY(wss_echo_1k, "TLS,Websocket")
        TEST_ENTRY(tcp_echo2, "TCP")
        TEST_ENTRY(tls_echo2, "TLS")
        TEST_ENTRY(ws_echo2, "Websocket")
        TEST_ENTRY(tls_echo2, "TLS,Websocket")
        TEST_ENTRY(tcp_echo_1k_data, "TCP")
        TEST_ENTRY(tls_echo_1k_data, "TLS")
        TEST_ENTRY(ws_echo_1k_data, "Websocket")
        TEST_ENTRY(wss_echo_1k_data, "TLS,Websocket")
        TEST_ENTRY(tcp_echo_10m_data, "TCP")
        TEST_ENTRY(tls_echo_10m_data, "TLS")
        TEST_ENTRY(ws_echo_10m_data, "Websocket")
        TEST_ENTRY(wss_echo_10m_data, "TLS,Websocket")

        TEST_ENTRY(tls_invalid_handshake_record_test, "TLS")
        TEST_ENTRY(tls_invalid_handshake_record_1kzero_test, "TLS")

        TEST_ENTRY(mqtt_connect_tcp, "TCP,MQTT")
        TEST_ENTRY(mqtt_connect_tls, "TLS,MQTT")
        TEST_ENTRY(mqtt_connect_ws, "Websocket,MQTT")
        TEST_ENTRY(mqtt_connect_wss, "Websocket,TLS,MQTT")
        
        TEST_ENTRY(mqtt_auth_user, "MQTT")
        TEST_ENTRY(mqtt_auth_user_fail, "MQTT")

        TEST_ENTRY(mqtt_invalid_protocol_tcp_tls_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_tcp_ws_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_tcp_wss_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_tls_tcp_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_tls_ws_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_tls_wss_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_ws_tcp_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_ws_tls_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_ws_wss_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_wss_tcp_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_wss_tls_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_wss_ws_test, "MQTT")

        TEST_ENTRY(mqtt_connect_invalid_reserved_flag_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_first_pkt_test, "MQTT")
        TEST_ENTRY(mqtt_two_connect_pkts, "MQTT")
        TEST_ENTRY(mqtt_invalid_protocol_name_test, "MQTT")
        TEST_ENTRY(mqtt_valid_protocol_level_test, "MQTT")
        TEST_ENTRY(mqtt_zero_clientid_but_not_clean_session_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_will_flag_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_will_qos_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_user_name_flag_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_user_password_flag_test, "MQTT")
        
        TEST_ENTRY(mqtt_conn_ack_sp_false_test, "MQTT")
        TEST_ENTRY(mqtt_conn_ack_sp_true_test, "MQTT")
        TEST_ENTRY(mqtt_zero_length_client_id_test, "MQTT")
        TEST_ENTRY(mqtt_normal_client_id_test, "MQTT")
        TEST_ENTRY(mqtt_512_length_client_id_test, "MQTT")
        TEST_ENTRY(mqtt_too_long_client_id_test, "MQTT")

        TEST_ENTRY(mqtt_keep_alive_test, "MQTT")
        TEST_ENTRY(mqtt_keep_alive_zero_test, "MQTT")
        TEST_ENTRY(mqtt_keep_alive_timed_out_test, "MQTT")
        TEST_ENTRY(mqtt_no_pkt_after_connected_test, "MQTT")

        TEST_ENTRY(mqtt_valid_topic_name_test, "MQTT")
        TEST_ENTRY(mqtt_valid_topic_filter_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_topic_name_test, "MQTT")
        TEST_ENTRY(mqtt_invalid_topic_filter_test, "MQTT")
        TEST_ENTRY(mqtt_sub_matched_test, "MQTT")
        TEST_ENTRY(mqtt_sub_unmatched_test, "MQTT")
        TEST_ENTRY(mqtt_sub_matched_multiple_test, "MQTT")
        TEST_ENTRY(mqtt_sub_matched_multiple_test2, "MQTT")
TEST_LIST_END

#endif //TINYSERVER_TEST_LIST_H
